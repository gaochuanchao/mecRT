//
// Generated file, do not edit! Created by opp_msgtool 6.0 from mecrt/packets/nic/VecDataInfo.msg.
//

#ifndef __VECDATAINFO_M_H
#define __VECDATAINFO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class VecDataInfo;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/TagBase_m.h" // import inet.common.TagBase

/**
 * Class generated from <tt>mecrt/packets/nic/VecDataInfo.msg:19</tt> by opp_msgtool.
 * <pre>
 * class VecDataInfo extends inet::TagBase
 * {
 *     double duration;
 * }
 * </pre>
 */
class VecDataInfo : public ::inet::TagBase
{
  protected:
    double duration = 0;

  private:
    void copy(const VecDataInfo& other);

  protected:
    bool operator==(const VecDataInfo&) = delete;

  public:
    VecDataInfo();
    VecDataInfo(const VecDataInfo& other);
    virtual ~VecDataInfo();
    VecDataInfo& operator=(const VecDataInfo& other);
    virtual VecDataInfo *dup() const override {return new VecDataInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual double getDuration() const;
    virtual void setDuration(double duration);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const VecDataInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, VecDataInfo& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline VecDataInfo *fromAnyPtr(any_ptr ptr) { return check_and_cast<VecDataInfo*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __VECDATAINFO_M_H

